$(document).ready(function(){
    InitFunc();
    SaveThemeCookie();
    ThemeSetFunc();
    BackTopFunc();
    LoadPixi()
});

async function LoadPixi() {
    const pixiContainer = document.getElementById('pixi');
    // 创建一个 pixi 实例
    let app = new PIXI.Application({
        antialias: true, // 消除锯齿
        resolution: window.devicePixelRatio || 1,
        backgroundColor: 0x223355,
        width: pixiContainer.offsetWidth,
        height: pixiContainer.offsetWidth* 9 / 16,
    });

    // 插入到 body 中
    document.getElementById('pixi').appendChild(app.view);

    const talk0 = PIXI.sound.Sound.from({
        url: './miyako/motions_talk_0_sound.ogg',
        preload: true,
    });
    const talk1 = PIXI.sound.Sound.from({
        url: './miyako/motions_talk_1_sound.ogg',
        preload: true,
    });
    const talk2 = PIXI.sound.Sound.from({
        url: './miyako/motions_talk_2_sound.ogg',
        preload: true,
    });
    const talk3 = PIXI.sound.Sound.from({
        url: './miyako/motions_talk_3_sound.ogg',
        preload: true,
    });
    const talk4 = PIXI.sound.Sound.from({
        url: './miyako/motions_talk_4_sound.ogg',
        preload: true,
    });

    PIXI.sound.disableAutoPause = true
    PIXI.sound.volumeAll = 0.2

    nowState = 0;

    PIXI.Assets.load('./miyako/CH0215_home.skel').then(onAssetsLoaded);

    function onAssetsLoaded(miyakoAsset) {
        const miyako = new PIXI.spine.Spine(miyakoAsset.spineData);
        miyako.scale.set(0.18);
        miyako.state.addListener({
            start: trackEntry => {
                // console.log(`Animation ${trackEntry.animation.name} started.`);

                if (trackEntry.animation.name === 'Idle_01' && nowState == 0) {
                    app.stage.interactive = true;
                    app.stage.on('pointerdown', () => {
                        if (nowState == 5 && app.stage.interactive) {
                            app.stage.interactive = false;
                            nowState = 1
                            miyako.state.addAnimation(2, "Talk_01_A", false, 0)
                            miyako.state.addAnimation(1, "Talk_01_M", false, 0);
                            setTimeout(() => {
                                talk0.play();
                            }, 730);
                        }

                        if (nowState == 4 && app.stage.interactive) {
                            app.stage.interactive = false;
                            nowState = 5
                            miyako.state.addAnimation(2, "Talk_05_A", false, 0)
                            miyako.state.addAnimation(1, "Talk_05_M", false, 0);
                            setTimeout(() => {
                                talk4.play();
                            }, 466);
                        }

                        if (nowState == 3 && app.stage.interactive) {
                            app.stage.interactive = false;
                            nowState = 4
                            miyako.state.addAnimation(2, "Talk_04_A", false, 0)
                            miyako.state.addAnimation(1, "Talk_04_M", false, 0);
                            setTimeout(() => {
                                talk3.play();
                            }, 606);
                        }

                        if (nowState == 2 && app.stage.interactive) {
                            app.stage.interactive = false;
                            nowState = 3
                            miyako.state.addAnimation(2, "Talk_03_A", false, 0)
                            miyako.state.addAnimation(1, "Talk_03_M", false, 0);
                            setTimeout(() => {
                                talk2.play();
                            }, 1645);
                        }

                        if (nowState == 1 && app.stage.interactive) {
                            app.stage.interactive = false;
                            nowState = 2
                            miyako.state.addAnimation(2, "Talk_02_A", false, 0)
                            miyako.state.addAnimation(1, "Talk_02_M", false, 0);
                            setTimeout(() => {
                                talk1.play();
                            }, 1266);
                        }

                        if (nowState == 0 && app.stage.interactive) {
                            app.stage.interactive = false;
                            nowState = 1
                            miyako.state.addAnimation(2, "Talk_01_A", false, 0)
                            miyako.state.addAnimation(1, "Talk_01_M", false, 0);
                            setTimeout(() => {
                                talk0.play();
                            }, 730);
                        }
                    })
                }
              },
            complete: trackEntry => {
                console.log(`Animation ${trackEntry.animation.name} completed.`);
                if (trackEntry.animation.name === 'Start_Idle_01') {
                    miyako.state.setAnimation(0, 'Idle_01', true);
                }
                
                if (!(trackEntry.animation.name === 'Idle_01')){
                    app.stage.interactive = true;
                }
                
            }
        });

        miyako.state.setAnimation(0, 'Start_Idle_01', false);

        app.renderer.resize(pixiContainer.offsetWidth , pixiContainer.offsetWidth * 9 / 16);
        app.stage.scale.set(Math.min(pixiContainer.offsetWidth / (16 * 32), pixiContainer.offsetWidth / (9 * 32)));
        app.stage.position.x = pixiContainer.offsetWidth * 0.52;
        app.stage.position.y = pixiContainer.offsetWidth * 0.611;

        window.addEventListener('resize', () => {
            app.renderer.resize(pixiContainer.offsetWidth, pixiContainer.offsetWidth * 9 / 16);
            app.stage.scale.set(Math.min(pixiContainer.offsetWidth / (16 * 32), pixiContainer.offsetWidth / (9 * 32)));
            app.stage.position.x = pixiContainer.offsetWidth * 0.52;
            app.stage.position.y = pixiContainer.offsetWidth * 0.611;
        });
        app.stage.addChild(miyako);
    }
}

function InitFunc(){
    
    if (getCookie("input-keyword")){
        $('.main').attr("data-keyword",getCookie("input-keyword"));
        $('#keyword').attr("value",getCookie("input-keyword"));
        delCookie("input-keyword");
    }

    const highlights = document.querySelectorAll('.post-detail-txt div.highlight-wrapper');
    const copyText = `复制`,
        copiedText = `已复制!`;

    highlights.forEach(highlight => {
        const copyButton = document.createElement('button');
        copyButton.innerHTML = copyText;
        copyButton.classList.add('copyCodeButton');
        highlight.appendChild(copyButton);

        const codeBlock = highlight.querySelector('code[data-lang]');
        if (!codeBlock) return;

        copyButton.addEventListener('click', () => {
            navigator.clipboard.writeText(codeBlock.textContent)
                .then(() => {
                    copyButton.textContent = copiedText;

                    setTimeout(() => {
                        copyButton.textContent = copyText;
                    }, 1000);
                })
                .catch(err => {
                    alert(err)
                    console.log('复制出错', err);
                });
        });
    });

}

function BackTopFunc(){
    $('#backTop').click(function (){
        $("html,body").animate({scrollTop:"0px"},400);
    })
}

function InfoPrompt(str){
    var prompt = "<div id='tempPrompt' class=\"info-link\"><div class=\"permi-info\">"+ str +"</div></div>";
    $('#info-container-inner').append(prompt);
}

function SearchButtonFunc(){
    $('#search').click(function (){
        setCookie("input-keyword",$('#keyword').val());
        if ( $('.main').attr('data-url')=='index'){
            location.href="/?keyword="
                + getCookie("input-keyword")
                + "&currentPage=1"
        }else if($('.main').attr('data-url')=='console'){
            location.href="/"
                + $('.main').attr('data-url')
                + "?type="
                + "&keyword="
                + getCookie("input-keyword")
                + "&currentPage=1"
        }else{
            location.href="/"
                + $('.main').attr('data-url')
                + "?type="
                + $('.main').attr('data-type')
                + "&keyword="
                + getCookie("input-keyword")
                // + $('#keyword').val()
                + "&currentPage=1"
        }
    })
}

const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');//dark

function ThemeSetFunc(){
    
    $('#info-theme').click(function (){
        if (mediaQuery.matches) {
            if (getCookie('prefer-theme')){
                if (getCookie('prefer-theme')=='auto'){
                    $('#body').attr('data-theme','light');
                }else{
                    $('#body').attr('data-theme','auto');
                }
            }else{
                if ($('#body').attr('data-theme')=='auto'){
                    $('#body').attr('data-theme','light');
                }else{
                    $('#body').attr('data-theme','auto');
                }
            }
        }else{
            if (getCookie('prefer-theme')){
                if (getCookie('prefer-theme')=='auto'){
                    $('#body').attr('data-theme','dark');
                }else{
                    $('#body').attr('data-theme','auto');
                }
            }else {
                if ($('#body').attr('data-theme')=='auto'){
                    $('#body').attr('data-theme','dark');
                }else{
                    $('#body').attr('data-theme','auto');
                }
            }
        }
        setCookie('prefer-theme',$('#body').attr('data-theme'));
    })
}

function SaveThemeCookie(){
    if (getCookie('prefer-theme')){
        if (getCookie('prefer-theme')=='light'){
            $('#body').attr('data-theme','light');
        }else if ((getCookie('prefer-theme')=='dark')){
            $('#body').attr('data-theme','dark');
        }else{
            $('#body').attr('data-theme','auto');
        }
    }
    setCookie('prefer-theme',$('#body').attr('data-theme'));
}

/**
 * 写入cookie
 * @param name  cookie 名
 * @param value  cookie 值
 */
function setCookie(name, value) {
    var Days = 30; //此 cookie 将被保存 30 天
    var exp = new Date();
    exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000);
    document.cookie = name + "=" + value + ";expires=" + exp.toGMTString()+";path=/";
}
/**
 * 删除cookie
 * @param name
 */
function delCookie(name) {
    var exp = new Date();
    exp.setTime(exp.getTime() - 1);
    var cval = getCookie(name);
    if (cval != null) document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString()+";path=/";
}
/**
 * 读取cookie
 * @param name
 * @returns
 */
function getCookie(name) {
    var arr = document.cookie.match(new RegExp("(^| )" + name + "=([^;]*)(;|$)"));
    if (arr != null)
        return arr[2];
    return null;
}
